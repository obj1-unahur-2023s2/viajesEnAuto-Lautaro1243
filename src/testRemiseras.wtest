import remiseras.*
import clientes.*

//VIAJES DE 1 KM

test "roxana le cobra a cada cliente el precio que pacto con la cooperativa"{
	assert.equals(ludmila.precioKilometro(), 18)
	assert.equals(anaMaria.precioKilometro(), 30)
	anaMaria.economicamenteEstable(false)
	assert.equals(anaMaria.precioKilometro(), 25)
	assert.equals(teresa.precioKilometro(), 22)
}

test "gabriela aumenta un 20% al valor pactado con la cooperativa"{
	assert.equals(gabriela.precioViaje(ludmila, 1), (18*1.2))
	assert.equals(gabriela.precioViaje(anaMaria, 1), (30*1.2))
	anaMaria.economicamenteEstable(false)
	assert.equals(gabriela.precioViaje(anaMaria, 1), (25*1.2))
	assert.equals(gabriela.precioViaje(teresa, 1), (22*1.2))
}

test "Mariela no aplica recarga, pero establece un mínimo de 50 pesos el viaje"{
	assert.that(mariela.precioViaje(ludmila, 1) >= 50)
	assert.that(mariela.precioViaje(anaMaria, 1) >= 50)
	assert.that(mariela.precioViaje(teresa, 1) >= 50)
}

test "juana cobra 100 pesos hasta 8 kilómetros, y 200 pesos si son más de 8 kilómetros"{
	assert.equals(juana.precioViaje(ludmila, 1), 100)
	assert.equals(juana.precioViaje(anaMaria, 1), 100)
	assert.equals(juana.precioViaje(teresa, 1), 100)
	assert.equals(juana.precioViaje(ludmila, 10), 200)
	assert.equals(juana.precioViaje(anaMaria, 10), 200)
	assert.equals(juana.precioViaje(teresa, 10), 200)
}


//VIAJES DE 10 KM

test "viajes de roxana 10 km"{
	//anaMaria.economicamenteEstable()
	assert.equals(roxana.precioViaje(ludmila, 10), 180)
	assert.equals(roxana.precioViaje(anaMaria, 10), 300)
	assert.equals(roxana.precioViaje(teresa, 10), 220)
}

test "viajes de Roxana y anaMaria" {
	
	anaMaria.economicamenteEstable(false)
	assert.equals(250,roxana.precioViaje(anaMaria,10))
}


test "viajes de Gabriela 10 km" {
	
//    anaMaria.estaEconomicamenteEstable()
	assert.equals(216,gabriela.precioViaje(ludmila,10))
    assert.equals(360,gabriela.precioViaje(anaMaria,10))
    assert.equals(264,gabriela.precioViaje(teresa,10))
}


test "viajes de Mariela 10KM" {
	
//    anaMaria.estaEconomicamenteEstable()
	assert.equals(180,mariela.precioViaje(ludmila,10))
    assert.equals(300,mariela.precioViaje(anaMaria,10))
    assert.equals(220,mariela.precioViaje(teresa,10))
}

test "viajes de Juana 10KM" {

    //anaMaria.estaEconomicamenteEstable()
	assert.equals(200,juana.precioViaje(ludmila,10))
    assert.equals(200,juana.precioViaje(anaMaria,10))
    assert.equals(200,juana.precioViaje(teresa,10))
}

////// VIAJES DE 2 KM///////

test "viajes de Roxana 2KM" {

    //anaMaria.estaEconomicamenteEstable()
	assert.equals(36,roxana.precioViaje(ludmila,2))
    assert.equals(60,roxana.precioViaje(anaMaria,2))
    assert.equals(44,roxana.precioViaje(teresa,2))
}

test "viajes de Gabriela 2km" {

//    anaMaria.estaEconomicamenteEstable()
	assert.equals(43.20,gabriela.precioViaje(ludmila,2))
    assert.equals(72,gabriela.precioViaje(anaMaria,2))
    assert.equals(52.80,gabriela.precioViaje(teresa,2))
}


test "viajes de Mariela 2KM" {

//    anaMaria.estaEconomicamenteEstable()
	assert.equals(50,mariela.precioViaje(ludmila,2))
    assert.equals(60,mariela.precioViaje(anaMaria,2))
    assert.equals(50,mariela.precioViaje(teresa,2))
}

test "viajes de Juana 2KM" {

 //   anaMaria.estaEconomicamenteEstable()
	assert.equals(100,juana.precioViaje(ludmila,2))
    assert.equals(100,juana.precioViaje(anaMaria,2))
    assert.equals(100,juana.precioViaje(teresa,2))
}


// LUCIA REEMPLAZA A MARIELA Y MELINA TRABAJA PARA LUDMILA

test "por un viaje de 10 kilómetros Lucía le cobra a Melina 150 pesos"{
	lucia.reemplazar(mariela)
	melina.trabajarPara(ludmila)
	assert.equals(lucia.precioViaje(melina, 10), 150)
}

test "por un viaje de 1 kilómetro le va a cobrar 50 pesos, que es el mínimo que establece Mariela"{
	lucia.reemplazar(mariela)
	melina.trabajarPara(ludmila)
	assert.equals(lucia.precioViaje(melina, 1), 50)
}


// LUCIA REEMPLAZA A GABRIELA Y MELINA TRABAJA PARA LUDMILA

test "por un viaje de 10 kilómetros Lucía le cobra a Melina 180 pesos"{
	lucia.reemplazar(gabriela)
	melina.trabajarPara(ludmila)
	assert.equals(lucia.precioViaje(melina, 10), 180)
}

test "por un viaje de 1 kilómetro le va a cobrar 18 pesos"{
	lucia.reemplazar(gabriela)
	melina.trabajarPara(ludmila)
	assert.equals(lucia.precioViaje(melina, 1), 18)
}










